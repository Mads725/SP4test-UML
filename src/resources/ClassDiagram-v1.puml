@startuml
'https://plantuml.com/class-diagram

class Main

enum ElementType {
WATER
EARTH
FIRE
}

class GameController {
static Player player
static Frame frame
ArrayList<Enemy> randomEnemies1
ArrayList<Enemy> randomEnemies2
ArrayList<Enemy> randomEnemies3
ArrayList<Enemy> bosses
ArrayList<Card> rewardCards
Array Card[] bossRewards1
int layer
int bossCounter
String playerName
startGame()
newGameScreen()
runOverview()
generateBosses()
generateEnemies()
generateRewardCards()
rewardCards()
generateBosRewards()
initializeCombat()
initializeBossCombat()
checkInventory()
initializeGC()
}

class Combat {
int combatRound
Player player
Enemy activeEnemy
int playerSlow
int enemySlow
int playerDot
int enemyDot
int enemyDot2
int playerDotTurns
int enemyDotTurns
int enemyDotTurns2
int playerReturnDamage
int enemyReturnDamage
int playerReturnDamageTurns
int enemyReturnDamageTurns
int delay
int delayDot
int playerBlindedTurns
int enemyBlindedTurns
int playerDamageIncreaseTurns
int enemyDamageIncreaseTurns
float enemyDamageIncrease
float playerDamageIncrease
boolean playerBlinded
boolean enemyBlinded
boolean playerFeared
boolean enemyFeared
boolean descend
boolean enemyIsInvisible
boolean willExplode
boolean has Exploded
boolean playerStunned
boolean enemyStunned
boolean dontPlayThisTurnDot
boolean dontPlayThisTurnStun
boolean dontPlayNextTurnStun
boolean wasPlayedLastTurnStun


startCombat()
megaLogic()
playerModifier()
enemyModifier()
statusEffectPlayer()
statusEffectEnemy()
checkCard()
}

abstract class CombatEntity {
int health
int maxHealth
int actionPoints
int maxActionPoints
String name
String type
addHealth()
removeHealth()
abstract takeTurn()
}

class Player {
CombatCard usedCard
ArrayList<Card> PlayerCards
ArrayList<Card> PlayerHand
int heal
float swordDamageIncrease
takeTurn()
drawHand()
shuffleDeck()
removeCardFromHand()
setUsedCard()
generatePlayerCards()
}

class Enemy{
 ArrayList<Card> playedCards
 BufferedImage image
 ArrayList<Card> cards
takeTurn()
resetPlayedCard()
addPlayedCard()
}

class Card {
ElementType element
String cardName
String cardText
int damage
int heal
int actionPointsCost
int slow
int dot
int dotTurns
int fear
int fearTurns
int blind
int blindTurns
int returnDamage
int returnDamageTurns
int stun
int delay
int delayDot
int increasedDamageTurns
float increasedDamage
boolean invisible
boolean hasBeenPlayedThisTurnStun
boolean hasBeenPlayedLastTurnStun
boolean hasBeenPlayedThisTurnDot
boolean isAscend
boolean canExplode
boolean isReGrow
getElement()
getCardName()
getCardText()
}

class Balance {
}

class Frame {
Player player
PlayerHandPanel panel
CombatPanel combatPanel
RewardsScreen rewardsScreen
newGamePanel newGameScreen
Overview overviewScreen
GameController gc
setOverviewScreen()
setHandPanel()
setRewardScreen()
setCombatPanel()
setNewGameScreen()
removeCombatPanel()
removeHandPanel()
removeRewardScreen()
}


Main - GameController : Starts
GameController "1" *-- "1"Combat
Combat "1" *-- "1" Player
Combat "1" *-- "1" Enemy
CombatEntity <|-- Player
CombatEntity <|-- Enemy
Player "1" *-- "many" Card : contains
Enemy "1" *-- "3-5" Card : contains
ElementType - Enemy
ElementType - Card

GameController - Frame : Starts

@enduml